{"version":3,"sources":["webpack:///./src/components/menu.jsx","webpack:///./src/pages/illuminator.jsx"],"names":["Menu","styled","div","isSideMenu","css","MenuItem","Dot","props","color","isSelected","selected","menuItems","caption","path","undefined","map","menuItem","index","key","to","GalleryBox","posed","ul","visible","delayChildren","staggerChildren","hidden","delay","FadeBox","opacity","Container","SidePanel","Gallery","Thumbprint","CloseButton","nodes","data","allIlluminatorDataJson","mount","pose","transitionStatus","filter","node","firstImage","id","name","style","display","fixed","alt","src","closeIcon","query"],"mappings":"6FAAA,iDAIMA,EAAOC,IAAOC,IAAV,6DAAGD,CAAH,oIAQN,qBAAGE,YAEHC,YADU,2DAORC,EAAWJ,IAAOC,IAAV,iEAAGD,CAAH,oEAMRK,EAAML,IAAOC,IAAV,4DAAGD,CAAH,kHACa,SAAAM,GAAK,OAAIA,EAAMC,SAMjC,qBAAGC,YAEHL,YADU,+EAMV,qBAAGD,YAEHC,YADU,0BAMC,aAASG,GAAQ,IACtBJ,EAAyBI,EAAzBJ,WAAYO,EAAaH,EAAbG,SACdC,EAAY,CAChB,CAAEC,QAAS,SAAUJ,MAAO,UAAWK,UAAMC,GAC7C,CAAEF,QAAS,cAAeJ,MAAO,UAAWK,KAAM,eAClD,CAAED,QAAS,QAASJ,MAAO,UAAWK,UAAMC,GAC5C,CAAEF,QAAS,MAAOJ,MAAO,UAAWK,UAAMC,GAC1C,CAAEF,QAAS,UAAWJ,MAAO,UAAWK,UAAMC,GAC9C,CAAEF,QAAS,UAAWJ,MAAO,UAAWK,UAAMC,GAC9C,CAAEF,QAAS,QAASJ,MAAO,UAAWK,UAAMC,GAC5C,CAAEF,QAAS,WAAYJ,MAAO,UAAWK,UAAMC,IAEjD,OACE,kBAACd,EAAD,CAAMG,WAAYA,GACfQ,EAAUI,KAAI,SAACC,EAAUC,GACxB,OACE,kBAACZ,EAAD,CAAUa,IAAKD,GACb,kBAAC,IAAD,CAAME,GAAIH,EAASH,MAAQ,IAAMG,EAASH,MACxC,kBAACP,EAAD,CACEE,MAAOQ,EAASR,MAChBL,WAAYA,EACZM,WAAYO,EAASH,MAAQG,EAASH,OAASH,KAE/CP,GAAca,EAASJ,gB,8OC3DjCQ,EAAaC,IAAMC,GAAG,CAC1BC,QAAS,CACPC,cAAe,IACfC,gBAAiB,IAEnBC,OAAQ,CAAEC,MAAO,OAEbC,EAAUP,IAAMnB,IAAI,CACxBqB,QAAS,CAAEM,QAAS,GACpBH,OAAQ,CAAEG,QAAS,KAGfC,EAAY7B,IAAOC,IAAV,yEAAGD,CAAH,4PAaT8B,EAAY9B,YAAO2B,GAAV,yEAAG3B,CAAH,0CAIT+B,EAAU/B,YAAOmB,GAAV,uEAAGnB,CAAH,uSAgBPgC,EAAahC,YAAO2B,GAAV,0EAAG3B,CAAH,qIASViC,EAAcjC,YAAO2B,GAAV,2EAAG3B,CAAH,yCAMF,sBAIR,IAFuBkC,EAExB,EAHJC,KACEC,uBAA0BF,MAG5B,OACE,kBAAC,IAAD,KACE,kBAACL,EAAD,KACE,kBAAC,kBAAD,MACG,YAAkC,IAA/BQ,EAA8B,EAA9BA,MACIC,GAD0B,EAAvBC,iBACIF,EAAQ,UAAY,UACjC,OACE,kBAAC,IAAD,CAAWC,KAAMA,GACf,kBAACR,EAAD,CAAWb,IAAI,aACb,kBAAC,IAAD,CAAMf,YAAU,EAACO,SAAU,iBAE7B,kBAACsB,EAAD,CAASd,IAAI,WACViB,EACEM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,cACpB5B,KAAI,SAAA2B,GAAI,OACP,kBAACT,EAAD,CAAYM,KAAMA,EAAMrB,IAAKwB,EAAKC,WAAWC,IAC3C,kBAAC,IAAD,CAAMzB,GAAI,eAAiBuB,EAAKG,MAC9B,kBAAC,IAAD,CAAKC,MAAO,CAACC,QAAS,SAAUC,MAAON,EAAKC,WAAWK,cAKjE,kBAACjB,EAAD,CAAWb,IAAI,eACf,kBAACgB,EAAD,CAAahB,IAAI,eACf,kBAAC,IAAD,CAAMC,GAAI,KACR,yBAAK8B,IAAI,eAAeC,IAAKC,eAY1C,IAAMC,EAAK","file":"component---src-pages-illuminator-jsx-4f9b46cd0b6400a14434.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"./link\"\nimport styled, { css } from \"styled-components\"\n\nconst Menu = styled.div`\n  z-index: 3;\n  flex-flow: row;\n  display: flex;\n  justify-content: center;\n  align-items: stretch;\n  align-content: center;\n  flex-direction: column;\n  ${({ isSideMenu }) =>\n    isSideMenu &&\n    css`\n      position: fixed;\n      top: 50%;\n      transform: translateY(-50%);\n    `}\n`\nconst MenuItem = styled.div`\n  color: #606060;\n  font-size: 1.5rem;\n  margin: 20px;\n  letter-spacing: 5px;\n`\nconst Dot = styled.div`\n  background-color: ${props => props.color};\n  height: 15px;\n  width: 15px;\n  margin-right: 50px;\n  border-radius: 50%;\n  display: inline-block;\n  ${({ isSelected }) =>\n    isSelected &&\n    css`\n      border: 8px solid #d2d2d2;\n      box-shadow: 0px 0px 0px 1px black;\n      margin: -8px;\n    `}\n  ${({ isSideMenu }) =>\n    isSideMenu &&\n    css`\n      margin-right: 0px;\n    `}\n`\n\nexport default function(props) {\n  const { isSideMenu, selected } = props\n  const menuItems = [\n    { caption: \"я есмь\", color: \"#ff00f5\", path: undefined },\n    { caption: \"иллюминатор\", color: \"#9e00ff\", path: \"illuminator\" },\n    { caption: \"кадры\", color: \"#0057ff\", path: undefined },\n    { caption: \"акт\", color: \"#00ffff\", path: undefined },\n    { caption: \"замыслы\", color: \"#14ff00\", path: undefined },\n    { caption: \"слияния\", color: \"#faff00\", path: undefined },\n    { caption: \"буквы\", color: \"#ffb800\", path: undefined },\n    { caption: \"эндорфин\", color: \"#ff0000\", path: undefined },\n  ]\n  return (\n    <Menu isSideMenu={isSideMenu}>\n      {menuItems.map((menuItem, index) => {\n        return (\n          <MenuItem key={index}>\n            <Link to={menuItem.path && \"/\" + menuItem.path}>\n              <Dot\n                color={menuItem.color}\n                isSideMenu={isSideMenu}\n                isSelected={menuItem.path && menuItem.path === selected}\n              />\n              {!isSideMenu && menuItem.caption}\n            </Link>\n          </MenuItem>\n        )\n      })}\n    </Menu>\n  )\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { Link } from \"../components/link\"\nimport Menu from \"../components/menu\"\nimport closeIcon from \"../images/icons/close.svg\"\nimport styled from \"styled-components\"\nimport { TransitionState } from \"gatsby-plugin-transition-link\"\nimport Layout from \"../components/layout\"\nimport posed, { PoseGroup } from \"react-pose\"\n\nconst GalleryBox = posed.ul({\n  visible: {\n    delayChildren: 300,\n    staggerChildren: 50,\n  },\n  hidden: { delay: 500 },\n})\nconst FadeBox = posed.div({\n  visible: { opacity: 1 },\n  hidden: { opacity: 0 },\n})\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: auto 1256px auto;\n  @media (max-width: 1400px) {\n    grid-template-columns: auto 924px auto;\n  }\n  @media (max-width: 1100px) {\n    grid-template-columns: auto 592px auto;\n  }\n  @media (max-width: 750px) {\n    grid-template-columns: auto 272px auto;\n  }\n`\nconst SidePanel = styled(FadeBox)`\n  display: flex;\n  justify-content: center;\n`\nconst Gallery = styled(GalleryBox)`\n  grid-template-columns: repeat(4, 1fr);\n  display: grid;\n  justify-content: center;\n  column-gap: 60px;\n  row-gap: 60px;\n  @media (max-width: 1400px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media (max-width: 1100px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media (max-width: 750px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`\nconst Thumbprint = styled(FadeBox)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  height: 260px;\n  width: 260px;\n  outline: white 4px solid;\n`\nconst CloseButton = styled(FadeBox)`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n`\n\nexport default ({\n  data: {\n    allIlluminatorDataJson: { nodes },\n  },\n}) => {\n  return (\n    <Layout>\n      <Container>\n        <TransitionState>\n          {({ mount, transitionStatus }) => {\n            const pose = mount ? \"visible\" : \"hidden\"\n            return (\n              <PoseGroup pose={pose}>\n                <SidePanel key=\"leftPanel\">\n                  <Menu isSideMenu selected={\"illuminator\"} />\n                </SidePanel>\n                <Gallery key=\"gallery\">\n                  {nodes\n                    .filter(node => node.firstImage)\n                    .map(node => (\n                      <Thumbprint pose={pose} key={node.firstImage.id}>\n                        <Link to={\"illuminator/\" + node.name}>\n                          <Img style={{display: \"block\"}} fixed={node.firstImage.fixed} />\n                        </Link>\n                      </Thumbprint>\n                    ))}\n                </Gallery>\n                <SidePanel key=\"rightPanel\"></SidePanel>\n                <CloseButton key=\"closeButton\">\n                  <Link to={\"/\"}>\n                    <img alt=\"languageIcon\" src={closeIcon} />\n                  </Link>\n                </CloseButton>\n              </PoseGroup>\n            )\n          }}\n        </TransitionState>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query allIlluminator {\n    allIlluminatorDataJson {\n      nodes {\n        name\n        firstImage {\n          fixed(height: 250, width: 250, cropFocus: CENTER, fit: INSIDE) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}